Improve iteration speed:
- [Placeholder]

Optimization ideas:
- Calm Sea and Polluted Earth skybox textures can be downscaled to match
    - Tried downscaling and didn't look great...
    - Potentially use ASTC NxM compression for larger (or all) textures?
        - [Android developer guid says support is lower than ETC2 but I don't believe it affects](https://developer.android.com/guide/playcore/asset-delivery/texture-compression) but I don't believe that will affect anyone who might run this app.
        - Could always compress to ASTC and
Modularization ideas:
- matrices library (NoopMath.kt) could be set up to be pulled from a maven repository instead of manually embedded into the project
- purge raw texture/model assets from the repo and store them somewhere else to be downloaded separately.

Scene improvements:
- Mandelbrot scene
    - Increase max zoom
        - Best potential solution seems to be utilizing Perturbation Theory.
        - Failed attempts were made at trying to emulate higher floating point precision in the fragment shader.
    - Let user choose two accent colors
- Native scene
    - Loading animation? (Might be a worse experience if loading is fast enough...)
    - Gate casting shadow onto self?

Refactoring:
- Scenes save format was previously used for loading from JSON files. World information is now hardcoded
 to reduce asset reads. Refactor save format code as it contains much superfluous code.

Bugs(?):
- Exiting a scene seems to sometimes show a frame or two of the users home screen wallpaper